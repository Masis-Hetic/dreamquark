{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/masis/Documents/dreamquark/dreamquark/front/pages/new-user.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport NewUser from \"../components/pages/add-user/add-user.styles\";\nimport MainComponent from \"../components/main-component/main-component\";\nimport Router from 'next/router';\n\nclass newUser extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      teams: [],\n      orga: '',\n      user: {\n        name: '',\n        email: '',\n        teams_id: [],\n        organization_id: 1\n      }\n    });\n\n    _defineProperty(this, \"handleChangeTeams\", e => {\n      e.persist();\n\n      if (this.state.teams.includes(e.target.value)) {\n        const teamsArray = this.state.teams.filter(r => r !== e.target.value);\n        this.setState({\n          teams: teamsArray.map(Number)\n        });\n      } else {\n        this.setState(prevState => ({\n          teams: [...prevState.teams, e.target.value]\n        }), () => this.setState(prevState => ({\n          user: _objectSpread({}, prevState.user, {\n            teams_id: this.state.teams.map(Number)\n          })\n        })));\n      }\n    });\n\n    _defineProperty(this, \"handleChangeOrga\", e => {\n      this.setState({\n        orga: Number(e.target.value)\n      }, () => this.setState(prevState => ({\n        user: _objectSpread({}, prevState.user, {\n          organization_id: Number(this.state.orga)\n        })\n      })));\n    });\n\n    _defineProperty(this, \"handleName\", e => {\n      e.persist();\n      this.setState(prevState => ({\n        user: _objectSpread({}, prevState.user, {\n          name: e.target && e.target.value\n        })\n      }));\n    });\n\n    _defineProperty(this, \"handleEmail\", e => {\n      e.persist();\n      this.setState(prevState => ({\n        user: _objectSpread({}, prevState.user, {\n          email: e.target && e.target.value\n        })\n      }));\n    });\n\n    _defineProperty(this, \"handleForm\", e => {\n      e.preventDefault();\n      const data = this.state.user;\n      fetch('http://localhost:8080/api/new-user', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: _JSON$stringify(data)\n      }).then(res => res.json()).then(response => {\n        response.message;\n        Router.push('/');\n      }).catch(error => console.error('Error:', error));\n    });\n  }\n\n  static async getInitialProps({\n    asPath\n  }) {\n    const getTeams = await fetch('http://localhost:8080/api/teams');\n    const getOrgas = await fetch('http://localhost:8080/api/organizations');\n    return {\n      getTeams: await getTeams.json(),\n      getOrgas: await getOrgas.json(),\n      asPath\n    };\n  }\n\n  render() {\n    const {\n      teams,\n      user\n    } = this.state;\n    const {\n      getTeams,\n      getOrgas,\n      asPath\n    } = this.props;\n    return __jsx(MainComponent, {\n      asPath: asPath,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, __jsx(NewUser, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, __jsx(NewUser.H1, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Add new user\"), __jsx(NewUser.Form, {\n      onSubmit: this.handleForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, __jsx(NewUser.Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, __jsx(NewUser.Label, {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Name\"), __jsx(NewUser.Input, {\n      id: \"name\",\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Nom de l'utilisateur\",\n      value: user.name,\n      onChange: e => this.handleName(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), __jsx(NewUser.Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, __jsx(NewUser.Label, {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"E-mail\"), __jsx(NewUser.Input, {\n      id: \"email\",\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Email de l'utilisateur\",\n      value: user.email,\n      onChange: e => this.handleEmail(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })), __jsx(NewUser.Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, __jsx(NewUser.Label, {\n      htmlFor: \"teams\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Choisir une ou plusieurs teams\"), __jsx(NewUser.Select, {\n      name: \"teams\",\n      id: \"teams\",\n      multiple: true,\n      value: teams,\n      onChange: this.handleChangeTeams,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, getTeams.map((team, i) => __jsx(\"option\", {\n      key: i,\n      value: team.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, team.name)))), __jsx(NewUser.Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, __jsx(NewUser.Label, {\n      htmlFor: \"organization\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Organisation\"), __jsx(NewUser.Select, {\n      name: \"organization\",\n      id: \"organization\",\n      onChange: this.handleChangeOrga,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, getOrgas.map((orga, i) => __jsx(\"option\", {\n      key: i,\n      value: orga.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, orga.name)))), __jsx(NewUser.Submit, {\n      type: \"submit\",\n      value: \"Add new user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default newUser;","map":{"version":3,"sources":["/Users/masis/Documents/dreamquark/dreamquark/front/pages/new-user.js"],"names":["React","fetch","NewUser","MainComponent","Router","newUser","Component","teams","orga","user","name","email","teams_id","organization_id","e","persist","state","includes","target","value","teamsArray","filter","r","setState","map","Number","prevState","preventDefault","data","method","headers","body","then","res","json","response","message","push","catch","error","console","getInitialProps","asPath","getTeams","getOrgas","render","props","handleForm","handleName","handleEmail","handleChangeTeams","team","i","id","handleChangeOrga"],"mappings":"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","sourcesContent":["import React         from 'react';\nimport fetch         from 'isomorphic-unfetch';\nimport NewUser       from \"../components/pages/add-user/add-user.styles\";\nimport MainComponent from \"../components/main-component/main-component\";\nimport Router        from 'next/router';\n\nclass newUser extends React.Component {\n  static async getInitialProps({ asPath }) {\n    const getTeams = await fetch('http://localhost:8080/api/teams');\n    const getOrgas = await fetch( 'http://localhost:8080/api/organizations' );\n\n    return { getTeams: await getTeams.json(), getOrgas: await getOrgas.json(), asPath }\n  }\n\n  state = {\n    teams: [],\n    orga: '',\n    user: {\n      name: '',\n      email: '',\n      teams_id: [],\n      organization_id: 1\n    }\n  };\n\n  handleChangeTeams = e => {\n    e.persist();\n\n    if (this.state.teams.includes( e.target.value )) {\n      const teamsArray = this.state.teams.filter( r => r !== e.target.value );\n      this.setState( { teams: teamsArray.map( Number ) } );\n    } else {\n      this.setState( prevState => ( { teams: [ ...prevState.teams, e.target.value ] } ), () =>\n        this.setState( prevState => ( { user: { ...prevState.user, teams_id: this.state.teams.map( Number ) } } ) )\n      );\n    }\n  };\n\n  handleChangeOrga = e => {\n    this.setState( { orga: Number( e.target.value ) }, () =>\n      this.setState( prevState => ( { user: { ...prevState.user, organization_id: Number( this.state.orga ) } } ) )\n    );\n  };\n\n  handleName = e => {\n    e.persist();\n\n    this.setState( prevState => ( {\n      user: {\n        ...prevState.user,\n        name: e.target && e.target.value\n      }\n    } ) );\n  };\n\n  handleEmail = e => {\n    e.persist();\n\n    this.setState( prevState => ( {\n      user: {\n        ...prevState.user,\n        email: e.target && e.target.value\n      }\n    } ) );\n  };\n\n  handleForm = e => {\n    e.preventDefault();\n    const data = this.state.user;\n\n    fetch( 'http://localhost:8080/api/new-user', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify( data ),\n    } ).then( res => res.json() )\n      .then( response => {response.message; Router.push('/')} )\n      .catch( error => console.error( 'Error:', error ) );\n  };\n\n  render() {\n    const { teams, user } = this.state;\n    const { getTeams, getOrgas, asPath } = this.props;\n\n    return (\n      <MainComponent asPath={asPath}>\n        <NewUser>\n\n          <NewUser.H1>Add new user</NewUser.H1>\n\n          <NewUser.Form onSubmit={ this.handleForm }>\n            <NewUser.Wrapper>\n              <NewUser.Label htmlFor=\"name\">Name</NewUser.Label>\n              <NewUser.Input\n                id=\"name\"\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Nom de l'utilisateur\"\n                value={ user.name }\n                onChange={ e => this.handleName( e ) }\n              />\n            </NewUser.Wrapper>\n\n            <NewUser.Wrapper>\n              <NewUser.Label htmlFor=\"email\">E-mail</NewUser.Label>\n              <NewUser.Input\n                id=\"email\"\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Email de l'utilisateur\"\n                value={ user.email }\n                onChange={ e => this.handleEmail( e ) }\n              />\n            </NewUser.Wrapper>\n\n            <NewUser.Wrapper>\n              <NewUser.Label htmlFor=\"teams\">Choisir une ou plusieurs teams</NewUser.Label>\n\n              <NewUser.Select\n                name=\"teams\"\n                id=\"teams\"\n                multiple={ true }\n                value={ teams }\n                onChange={ this.handleChangeTeams }\n              >\n                { getTeams.map( ( team, i ) => <option key={ i } value={ team.id }>{ team.name }</option> ) }\n              </NewUser.Select>\n            </NewUser.Wrapper>\n\n            <NewUser.Wrapper>\n              <NewUser.Label htmlFor=\"organization\">Organisation</NewUser.Label>\n\n              <NewUser.Select name=\"organization\" id=\"organization\" onChange={ this.handleChangeOrga }>\n                { getOrgas.map( ( orga, i ) => <option key={ i } value={ orga.id }>{ orga.name }</option> ) }\n              </NewUser.Select>\n            </NewUser.Wrapper>\n\n            <NewUser.Submit type=\"submit\" value=\"Add new user\"/>\n\n          </NewUser.Form>\n\n        </NewUser>\n      </MainComponent>\n    )\n  }\n}\n\nexport default newUser;\n"]},"metadata":{},"sourceType":"module"}