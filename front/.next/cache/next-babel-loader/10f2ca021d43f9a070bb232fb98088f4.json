{"ast":null,"code":"var _jsxFileName = \"/Users/masis/Documents/dreamquark/dreamquark/front/pages/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport Head from '../components/head';\nimport Link from 'next/link';\nimport MainComponent from \"../components/main-component/main-component\";\nimport Index from \"../components/pages/index/index.styles\";\n\nconst Home = ({\n  users,\n  asPath\n}) => __jsx(MainComponent, {\n  asPath: asPath,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, __jsx(Head, {\n  title: \"Home\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}), __jsx(Index, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, __jsx(Index.Wrapper, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, __jsx(Index.H1, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, \"List of users\"), __jsx(Index.Ul, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, __jsx(Index.FirstRow, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, __jsx(Index.FirstColumn, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, \"Id\"), __jsx(Index.SecondColumn, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, \"Name\"), __jsx(Index.ThirdColumn, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, \"Email\"), __jsx(Index.ForthColumn, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, \"Organization\"), __jsx(Index.FifthColumn, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, \"Team(s)\")), users.map((user, i) => __jsx(Index.Li, {\n  key: i,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, __jsx(Link, {\n  href: {\n    pathname: `/user/[user]`,\n    query: {\n      id: user.user_id\n    }\n  },\n  as: `/user/${user.user_id}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, __jsx(Index.A, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, __jsx(Index.FirstColumn, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, user.user_id), __jsx(Index.SecondColumn, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, user.user_name), __jsx(Index.ThirdColumn, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}, user.user_email), __jsx(Index.ForthColumn, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}, user.organization_name), __jsx(Index.FifthColumn, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, user.team_name.map((t, i) => i + 1 < user.team_name.length ? `${t}, ` : `${t}`))))))))));\n\nHome.getInitialProps = async ({\n  asPath\n}) => {\n  const res = await fetch('http://localhost:8080/api');\n  return {\n    users: await res.json(),\n    asPath\n  };\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/masis/Documents/dreamquark/dreamquark/front/pages/index.js"],"names":["React","fetch","Head","Link","MainComponent","Index","Home","users","asPath","map","user","i","pathname","query","id","user_id","user_name","user_email","organization_name","team_name","t","length","getInitialProps","res","json"],"mappings":";;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,OAAOC,KAAP,MAA0B,oBAA1B;AACA,OAAOC,IAAP,MAA0B,oBAA1B;AACA,OAAOC,IAAP,MAA0B,WAA1B;AACA,OAAOC,aAAP,MAA0B,6CAA1B;AACA,OAAOC,KAAP,MAA0B,wCAA1B;;AAEA,MAAMC,IAAI,GAAG,CAAE;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAF,KACX,MAAC,aAAD;AAAe,EAAA,MAAM,EAAEA,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD;AAAM,EAAA,KAAK,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEE,MAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,KAAD,CAAO,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE,MAAC,KAAD,CAAO,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,KAAD,CAAO,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,MAAC,KAAD,CAAO,YAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAGE,MAAC,KAAD,CAAO,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHF,EAIE,MAAC,KAAD,CAAO,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,EAKE,MAAC,KAAD,CAAO,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALF,CADF,EASID,KAAK,CAACE,GAAN,CAAW,CAAEC,IAAF,EAAQC,CAAR,KACX,MAAC,KAAD,CAAO,EAAP;AAAU,EAAA,GAAG,EAAGA,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD;AACE,EAAA,IAAI,EAAG;AAAEC,IAAAA,QAAQ,EAAG,cAAb;AAA4BC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,EAAE,EAAEJ,IAAI,CAACK;AAAX;AAAnC,GADT;AAEE,EAAA,EAAE,EAAI,SAASL,IAAI,CAACK,OAAS,EAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAIE,MAAC,KAAD,CAAO,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,KAAD,CAAO,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAqBL,IAAI,CAACK,OAA1B,CADF,EAEE,MAAC,KAAD,CAAO,YAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAsBL,IAAI,CAACM,SAA3B,CAFF,EAGE,MAAC,KAAD,CAAO,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAqBN,IAAI,CAACO,UAA1B,CAHF,EAIE,MAAC,KAAD,CAAO,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAqBP,IAAI,CAACQ,iBAA1B,CAJF,EAKE,MAAC,KAAD,CAAO,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAqBR,IAAI,CAACS,SAAL,CAAeV,GAAf,CAAmB,CAACW,CAAD,EAAIT,CAAJ,KAAWA,CAAC,GAAG,CAAL,GAAUD,IAAI,CAACS,SAAL,CAAeE,MAAzB,GAAmC,GAAGD,CAAG,IAAzC,GAAgD,GAAGA,CAAG,EAAnF,CAArB,CALF,CAJF,CADF,CADA,CATJ,CAFF,CAFF,CAFF,CADF;;AAwCAd,IAAI,CAACgB,eAAL,GAAuB,OAAQ;AAACd,EAAAA;AAAD,CAAR,KAAsB;AAC3C,QAAMe,GAAG,GAAG,MAAMtB,KAAK,CAAE,2BAAF,CAAvB;AAEA,SAAO;AACLM,IAAAA,KAAK,EAAE,MAAMgB,GAAG,CAACC,IAAJ,EADR;AAELhB,IAAAA;AAFK,GAAP;AAID,CAPD;;AASA,eAAeF,IAAf","sourcesContent":["import React         from 'react';\nimport fetch         from 'isomorphic-unfetch';\nimport Head          from '../components/head'\nimport Link          from 'next/link';\nimport MainComponent from \"../components/main-component/main-component\";\nimport Index         from \"../components/pages/index/index.styles\";\n\nconst Home = ( { users, asPath } ) => (\n  <MainComponent asPath={asPath}>\n    <Head title=\"Home\"/>\n    <Index>\n\n      <Index.Wrapper>\n        <Index.H1>List of users</Index.H1>\n        <Index.Ul>\n          <Index.FirstRow>\n            <Index.FirstColumn>Id</Index.FirstColumn>\n            <Index.SecondColumn>Name</Index.SecondColumn>\n            <Index.ThirdColumn>Email</Index.ThirdColumn>\n            <Index.ForthColumn>Organization</Index.ForthColumn>\n            <Index.FifthColumn>Team(s)</Index.FifthColumn>\n          </Index.FirstRow>\n\n          { users.map( ( user, i ) =>\n            <Index.Li key={ i }>\n              <Link\n                href={ { pathname: `/user/[user]`, query: { id: user.user_id } } }\n                as={ `/user/${ user.user_id }` }\n              >\n                <Index.A>\n                  <Index.FirstColumn>{ user.user_id }</Index.FirstColumn>\n                  <Index.SecondColumn>{ user.user_name }</Index.SecondColumn>\n                  <Index.ThirdColumn>{ user.user_email}</Index.ThirdColumn>\n                  <Index.ForthColumn>{ user.organization_name}</Index.ForthColumn>\n                  <Index.FifthColumn>{ user.team_name.map((t, i) => (i + 1) < user.team_name.length ? `${ t }, ` : `${ t }` )}</Index.FifthColumn>\n                </Index.A>\n              </Link>\n            </Index.Li>\n          ) }\n\n        </Index.Ul>\n      </Index.Wrapper>\n\n    </Index>\n  </MainComponent>\n);\n\nHome.getInitialProps = async ( {asPath} ) => {\n  const res = await fetch( 'http://localhost:8080/api' );\n\n  return {\n    users: await res.json(),\n    asPath\n  };\n};\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}